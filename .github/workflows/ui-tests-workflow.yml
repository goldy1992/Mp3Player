name: UI Tests Workflow
run-name: Run UI Tests
on:
  workflow_dispatch:
  workflow_call:
    secrets:
      RELEASE_SERVICE_ACCOUNT_JSON:
        required: true
      SONAR_TOKEN:
        required: true

jobs:
  run-ui-tests:
    name: UI Tests
    permissions:
      contents: 'read'
      id-token: 'write'
    environment: release_env
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          distribution: corretto
          java-version: 21

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Assemble debug and androidTest APKs
        run: ./gradlew assembleDebug assembleAndroidTest

      - id: 'auth'
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.RELEASE_SERVICE_ACCOUNT_JSON }}

#      - name: Setup gcloud
#        uses: google-github-actions/setup-gcloud@v1
#
#      - name: Run firebase tests on gcloud and pull coverage data
#        run: |
#          BUCKET_ID=pw30jhrbi15pc-ywxmz0rw1n8wa/2021-01-25_23:18:57.486170_Stvb
#          echo $BUCKET_ID
#          TEST_OUTPUT_FOLDER=${{ github.workspace }}/client
#          echo $TEST_OUTPUT_FOLDER
#          gsutil -m cp -R -U gs://test-lab-$BUCKET_ID/**/sdcard/coverage.ec $TEST_OUTPUT_FOLDER || true
#          GCLOUD_OUTPUT_LOG=gcloudLog.txt
#          gcloud firebase test android run ${{github.workspace}}/.github/workflows/arguments/firebase-testlab-arguments.yml:client-ui-tests \
#            --app ${{ github.workspace }}/app/build/outputs/apk/full/debug/app-full-debug.apk \
#            --test ${{ github.workspace }}/client/build/outputs/apk/androidTest/full/debug/client-full-debug-androidTest.apk \
#            --type instrumentation \
#            --app ${{ github.workspace }}/app/build/outputs/apk/full/debug/app-full-debug.apk \
#            --test ${{ github.workspace }}/client/build/outputs/apk/androidTest/full/debug/client-full-debug-androidTest.apk \
#            --environment-variables coverage=true,coverageFile=/sdcard/coverage.ec \
#            --device model=Pixel2,version=29,locale=en,orientation=portrait \
#            --directories-to-pull /sdcard \
#            --no-record-video \
#             | tee $GCLOUD_OUTPUT_LOG
#          BUCKET_ID=`cat $GCLOUD_OUTPUT_LOG | sed -n -E 's#^.+test-lab-(.+)/.+#\1#p'`
#
#      - name: Grab remote reports and artifacts and store locally
#        run: gsutil -m cp -R -U gs://test-lab-$BUCKET_ID/**/sdcard/coverage.ec $TEST_OUTPUT_FOLDER || true

      - name: Gradle and create Debug test report
        run: ./gradlew jacocoTestReport

      - name: Run Lint
        run: ./gradlew lint

      - name: Run Sonar
        run: ./gradlew sonar --info --stacktrace
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
