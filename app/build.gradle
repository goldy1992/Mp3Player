apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    testBuildType "debug"
    packagingOptions {
        resources {
            excludes += ['**/attach_hotspot_windows.dll', 'META-INF/LICENSE.md', 'META-INF/LICENSE-notice.md', 'META-INF/AL2.0', 'META-INF/ASM', 'META-INF/licenses/ASM', 'META-INF/LGPL2.1']
        }
    }
    compileSdkVersion target_sdk_version
	buildToolsVersion build_tools_version
    defaultConfig {
        applicationId "com.github.goldy1992.mp3player"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode Integer.parseInt(project.properties['version.code']).intValue()
        versionName project.properties['version.name']
        testInstrumentationRunner "com.github.goldy1992.mp3player.Mp3PlayerHiltTestRunner"
        missingDimensionStrategy 'fullUnittest', 'fullDebug'
        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'

    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            debuggable true
            testCoverageEnabled true
        }
    }
    flavorDimensions flavor_dimen_mode
    productFlavors {
        full {
            applicationIdSuffix ".full"
            versionNameSuffix "-full"
            resValue "string", "app_name", "Music Player"
        }
        automation {
            applicationIdSuffix ".automation"
            versionNameSuffix "-automation"
            resValue "string", "app_name", "Test Music Player"
            matchingFallbacks = ['full']
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name


        if (names.contains("automation")) {
            if (variant.buildType.name == "release") {
                setIgnore(true)
            }
        }

    }


    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'

        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
        unitTests.all {
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }
            jacoco {
                includeNoLocationClasses=true
            }
        }
    }

    compileOptions {
        incremental = false
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions { jvmTarget = "11" }
    lint {
        abortOnError false
        disable 'GoogleAppIndexingWarning', 'PrivateResource'
    }
    namespace 'com.github.goldy1992.mp3player'
}

dependencies {

//    // local libs
    implementation project(path: ':commons')
    implementation project(path: ':service')
    implementation project(path: ':client')

    // hilt
    implementation group: 'com.google.dagger', name: 'hilt-android', version: hilt_version
    kapt group: 'com.google.dagger', name: 'hilt-android-compiler', version: hilt_version
    kapt group: 'com.google.dagger', name: 'hilt-compiler', version: hilt_version
    androidTestImplementation group: 'com.google.dagger', name: 'hilt-android', version: hilt_version
    androidTestImplementation group: 'com.google.dagger', name: 'hilt-android-testing', version: hilt_version
    kaptAndroidTest group: 'com.google.dagger', name: 'hilt-android-compiler', version: hilt_version
 //   androidTestImplementation group: 'androidx.hilt', name: 'hilt-lifecycle-viewmodel', version: HILT_JETPACK_VERSION

    kaptAndroidTest group: 'com.google.dagger', name: 'hilt-compiler', version: hilt_version

}

sonarqube {
    skipProject = true
}