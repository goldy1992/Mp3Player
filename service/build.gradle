apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply from: rootProject.file("jacoco-with-test-support.gradle")

android {
    compileSdkVersion target_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            enableUnitTestCoverage false
            testCoverageEnabled true
            minifyEnabled false
        }
    }
    flavorDimensions flavor_dimen_mode
    productFlavors {
        full {
            dimension = flavor_dimen_mode
        }
        automation {
            dimension = flavor_dimen_mode
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name

        if (names.contains("automation")) {
            if (variant.buildType.name == "release" || variant.buildType.name == "unittest") {
                setIgnore(true)
            }
        }
    }

    compileOptions {
        incremental = false
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions { jvmTarget = "11" }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
        unitTests.all {
            testLogging {
                events "passed", "skipped"//, "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = false
            }
            jacoco {
                includeNoLocationClasses = true
                includes = ['com/github/goldy1992/mp3player/service/**']
                excludes =  EXCLUDE_LIST
            }
        }
    }
    namespace 'com.github.goldy1992.mp3player.service'
}

dependencies {
    implementation group: 'androidx.media', name: 'media', version: media_version
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: commons_collections4_version
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: commons_lang_version
    implementation group: 'com.google.android.exoplayer', name: 'exoplayer-core', version: exo_player_vesrion
    implementation group: 'com.google.android.exoplayer', name: 'exoplayer-ui', version: exo_player_vesrion
    implementation group: 'com.google.android.exoplayer', name: 'extension-mediasession', version: exo_player_vesrion
    implementation group: 'androidx.appcompat', name: 'appcompat', version: app_compat_version
    implementation group: 'androidx.core', name: 'core-ktx', version: androidx_core_ktx_version
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: coroutines_version
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-android', version: coroutines_version
    implementation project(':commons')

    implementation group: 'androidx.room', name: 'room-runtime', version: room_version
    implementation group: 'androidx.room', name: 'room-ktx', version: room_version
    kapt group: 'androidx.room', name: 'room-compiler', version: room_version


    testImplementation junitUnitTests

    testImplementation("org.robolectric:robolectric:$robolectric_version") {
        exclude group: "com.google.auto.service", module: "auto-service"
    }
    testImplementation group: 'org.robolectric', name: 'shadows-supportv4', version: robolectric_version
    testImplementation group: "org.mockito.kotlin", name: "mockito-kotlin", version: mockito_kotlin_version
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: mockito_inline_version
    testImplementation group: 'androidx.test', name: 'core', version: test_core_version
    testImplementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-test', version: coroutines_version

    // hilt
    implementation group: 'com.google.dagger', name: 'hilt-android', version: hilt_version
    kapt group: 'com.google.dagger', name: 'hilt-android-compiler', version: hilt_version

    testImplementation group: 'com.google.dagger', name: 'hilt-android-testing', version: hilt_version
    kaptTest group: 'com.google.dagger', name: 'hilt-android-compiler', version: hilt_version

}

sonarqube {
    androidVariant 'fullDebug'
    properties {
        property 'sonar.java.binaries', "${project.buildDir}/intermediates/javac/fullDebug/classes"
        property 'sonar.coverage.jacoco.xmlReportPaths', "${project.buildDir}/reports/jacoco/jacocoUnitTestReport/jacocoUnitTestReport.xml"
        property 'sonar.sources', "${projectDir}/src/main/java"
    }
}

