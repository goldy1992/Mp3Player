apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'dagger.hilt.android.plugin'
apply from: rootProject.file("jacoco-with-test-support.gradle")

android {
    compileSdkVersion TARGET_SDK_VERION
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERION
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            testCoverageEnabled = true
        }
    }
    flavorDimensions flavor_dimen_mode
    productFlavors {
        full {
            dimension = flavor_dimen_mode
        }
        endToEnd {
            dimension = flavor_dimen_mode
        }
        unitTest {
            dimension = flavor_dimen_mode
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        def isReleaseTest = variant.buildType.name =="release" &&
            (
                names.contains(flavor_integration)
                || names.contains(flavor_unitTest)
            )
        // To check for a build type instead, use variant.buildType.name == "buildType"
        if (isReleaseTest) {
            // Gradle ignores any variants that satisfy the conditions above.
            setIgnore(true)
        }
    }

    compileOptions {
        incremental = false
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    hilt {
        enableTransformForLocalTests = true
    }

    kotlinOptions { jvmTarget = "1.8" }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
        unitTests.all {
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }
            jacoco {
                includeNoLocationClasses = true
                includes = ['com/github/goldy1992/mp3player/service/**']
                excludes =  EXCLUDE_LIST
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation group: 'androidx.media', name: 'media', version: MEDIA_VERSION
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: COMMONS_COLLECTIONS4_VERSION
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: COMMONS_LANG_VERSION
    implementation group: 'com.google.guava', name: 'guava', version: GOOGLE_GUAVA_VERSION
    implementation group: 'com.google.android.exoplayer', name: 'exoplayer-core', version: EXO_PLAYER_VERSION
    implementation group: 'com.google.android.exoplayer', name: 'exoplayer-ui', version: EXO_PLAYER_VERSION
    implementation group: 'com.google.android.exoplayer', name: 'extension-mediasession', version: EXO_PLAYER_VERSION
    implementation group: 'androidx.appcompat', name: 'appcompat', version: APP_COMPAT_VERSION
    implementation group: 'androidx.core', name: 'core-ktx', version: ANDROIDX_CORE_KOTLIN_VERSION
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: KOTLIN_COROUTINE_VERSION
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-android', version: KOTLIN_COROUTINE_VERSION
    implementation project(':commons')

    implementation group: 'androidx.room', name: 'room-runtime', version: ROOM_VERSION
    implementation group: 'androidx.room', name: 'room-ktx', version: ROOM_VERSION
    kapt group: 'androidx.room', name: 'room-compiler', version: ROOM_VERSION


    unitTestImplementation junit5UnitTests
    testRuntimeOnly junit5UnitTestRuntime

    testImplementation("org.robolectric:robolectric:$ROBOLECTRIC_VERSION") {
        exclude group: "com.google.auto.service", module: "auto-service"
    }
    testImplementation group: 'org.robolectric', name: 'shadows-supportv4', version: ROBOLECTRIC_VERSION
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$MOCKITO_KOTLIN"
    testImplementation group: 'androidx.test', name: 'core', version: TEST_CORE_VERSION
    testImplementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-test', version: KOTLIN_COROUTINE_VERSION

    // hilt
    implementation group: 'com.google.dagger', name: 'hilt-android', version: HILT_VERSION
    kapt group: 'com.google.dagger', name: 'hilt-android-compiler', version: HILT_VERSION

    testImplementation group: 'com.google.dagger', name: 'hilt-android-testing', version: HILT_VERSION
    kaptTest group: 'com.google.dagger', name: 'hilt-android-compiler', version: HILT_VERSION

}
