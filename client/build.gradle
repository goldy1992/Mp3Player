apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply from: rootProject.file("jacoco-with-test-support.gradle")
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion target_sdk_version
    buildToolsVersion build_tools_version
    testBuildType "debug"

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion compose_version
    }

    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/ASM'
        exclude 'META-INF/licenses/ASM'
        exclude 'META-INF/LGPL2.1'
    }

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion target_sdk_version
        testInstrumentationRunner "com.github.goldy1992.mp3player.client.CustomTestRunner"
        /*makes the Android Test Orchestrator run its "pm clear" command after each test invocation.
        Ensures app's state is completely cleared between tests. */
        testInstrumentationRunnerArguments clearPackageData: 'true'
        consumerProguardFiles 'consumer-rules.pro'
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
            debuggable true
            minifyEnabled false
        }
    }
    flavorDimensions flavor_dimen_mode
    productFlavors {
        full {
            dimension = flavor_dimen_mode
        }
        automation {
            dimension = flavor_dimen_mode
        }
    }

    sourceSets {
        String sharedTestSrcDir = 'src/testCommons/java'
        String sharedTestResDir = 'src/testCommons/res'
        full {
            debug {
                test {
                    java.srcDirs += [sharedTestSrcDir]
                    resources.srcDirs += [sharedTestResDir]
                }
                androidTest {
                    java.srcDirs += [sharedTestSrcDir]
                    resources.srcDirs += [sharedTestResDir]
                }
            }
        }
    }

    compileOptions {
        incremental = false
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "11"
        useIR = true
    }

    testOptions {
        //execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
        unitTests.all {
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = false
            }
            jacoco { // FOR USE IN TEST EXECUTION
                includeNoLocationClasses = true
                includes = ['com/github/goldy1992/mp3player/client/**']
                excludes = EXCLUDE_LIST
            }
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name

        if (names.contains("automation")) {
            if (variant.buildType.name == "release" || variant.buildType.name == "debug") {
                setIgnore(true)
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':commons')
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: coroutines_version
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-android', version: coroutines_version
    implementation group: 'androidx.annotation', name: 'annotation', version: ANNOTATION_VERSION
    implementation group: 'androidx.appcompat', name: 'appcompat', version: app_compat_version
    implementation group: 'androidx.core', name: 'core-ktx', version: androidx_core_ktx_version
    implementation group: 'com.google.guava', name: 'guava', version: GOOGLE_GUAVA_VERSION
    implementation group: 'androidx.media', name: 'media', version: MEDIA_VERSION
    implementation group: 'org.apache.commons', name: 'commons-io', version: COMMONS_IO_VERSION
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: COMMONS_COLLECTIONS4_VERSION
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: COMMONS_LANG_VERSION

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"


    implementation group: 'androidx.activity', name: 'activity-ktx', version: activity_ktx_version


    implementation group: 'androidx.compose.ui', name: 'ui', version: compose_version
    implementation group: 'androidx.compose.ui', name: 'ui-tooling', version: compose_version
    implementation group: 'androidx.compose.foundation', name: 'foundation', version: compose_version
    implementation group: "androidx.compose.foundation", name: "foundation-layout", version: compose_version
    implementation group: 'androidx.compose.material', name:'material', version: compose_version
    implementation group: 'androidx.compose.material', name:'material-icons-core', version: compose_version
    implementation group: 'androidx.compose.material', name:'material-icons-extended', version: compose_version
    implementation group: 'androidx.compose.runtime', name: 'runtime-livedata', version: compose_version
    implementation group: 'androidx.compose.runtime', name: 'runtime-rxjava2', version: compose_version

    implementation group: 'androidx.activity', name: 'activity-compose', version: '1.3.0-rc02'
    implementation group: 'androidx.lifecycle', name: 'lifecycle-viewmodel-compose', version: '1.0.0-alpha07'
    implementation "androidx.navigation:navigation-compose:2.4.0-alpha05"
    implementation group: 'com.google.dagger', name: 'hilt-android', version: HILT_VERSION
    implementation group: 'androidx.hilt', name: 'hilt-navigation-compose', version: '1.0.0-alpha03'

    def accompanist_version = "0.14.0"
    implementation group: "com.google.accompanist", name: "accompanist-pager", version: accompanist_version
    implementation group: "com.google.accompanist", name: "accompanist-pager-indicators", version: accompanist_version
    implementation group: "com.google.accompanist", name: "accompanist-glide", version: accompanist_version


    implementation "androidx.datastore:datastore-preferences:1.0.0-rc02"

    def compose_test_version = '1.0.0-rc01'
    // UI Tests
    androidTestImplementation group: 'androidx.compose.ui', name: 'ui-test-junit4', version: compose_version
    // Test rules and transitive dependencies:
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:$compose_test_version")
    testImplementation("androidx.compose.ui:ui-test-junit4:$compose_test_version")
// Needed for createComposeRule, but not createAndroidComposeRule:
    debugImplementation("androidx.compose.ui:ui-test-manifest:$compose_test_version")


    // hilt

    kapt group: 'com.google.dagger', name: 'hilt-android-compiler', version: HILT_VERSION
    kapt group: 'com.google.dagger', name: 'hilt-compiler', version: HILT_VERSION


    kaptTest group: 'com.google.dagger', name: 'hilt-android-compiler', version: HILT_VERSION
    kaptTest group: 'com.google.dagger', name: 'hilt-compiler', version: HILT_VERSION

    androidTestImplementation group: 'com.google.dagger', name: 'hilt-android-testing', version: HILT_VERSION
    kaptAndroidTest group: 'com.google.dagger', name: 'hilt-android-compiler', version: HILT_VERSION

    kaptAndroidTest group: 'com.google.dagger', name: 'hilt-compiler', version: HILT_VERSION


    //   automationImplementation project(':commons')
    androidTestImplementation project(':commons')


    androidTestImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
    androidTestImplementation junitUnitTests
    androidTestImplementation group: 'androidx.test', name: 'rules', version: TEST_RULES_VERSION
    androidTestImplementation group: 'androidx.test.espresso', name: 'espresso-core', version: ESPRESSO_CORE_VERSION
    androidTestImplementation group: 'androidx.test.espresso', name: 'espresso-core', version: ESPRESSO_CORE_VERSION
    androidTestImplementation group: 'androidx.test.espresso', name: 'espresso-contrib', version: ESPRESSO_CORE_VERSION
    androidTestImplementation group: 'androidx.test', name: 'core-ktx', version: TEST_CORE_VERSION

    androidTestImplementation group: 'androidx.test.ext', name: 'junit', version: JUNIT_EXT_VERSION
    androidTestImplementation group: 'androidx.test', name: 'runner', version: TEST_RUNNER_VERSION
    androidTestUtil group: "androidx.test", name: "orchestrator", version: test_orchestrator_version
    androidTestImplementation group: 'androidx.test', name: 'monitor', version: monitor_version
    androidTestImplementation group: "org.mockito.kotlin", name: "mockito-kotlin", version: mockito_kotlin_version
    androidTestImplementation group: 'com.linkedin.dexmaker', name: 'dexmaker-mockito-inline-extended', version: '2.28.1'
    androidTestImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
    androidTestImplementation 'androidx.arch.core:core-common:2.1.0'
    androidTestImplementation 'androidx.arch.core:core-runtime:2.1.0'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation group: 'androidx.test.espresso', name: 'espresso-idling-resource', version: ESPRESSO_CORE_VERSION
    androidTestImplementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    androidTestImplementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // Test rules and transitive dependencies:
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:$compose_version")
// Needed for createComposeRule, but not createAndroidComposeRule:
    debugImplementation("androidx.compose.ui:ui-test-manifest:$compose_version")
    debugImplementation group: 'androidx.core', name: 'core-ktx', version: androidx_core_ktx_version
    debugImplementation group: 'androidx.activity', name: 'activity-ktx', version: activity_ktx_version
    debugImplementation group: 'androidx.test.espresso', name: 'espresso-idling-resource', version: ESPRESSO_CORE_VERSION
    automationImplementation group: 'androidx.test.espresso', name: 'espresso-contrib', version: ESPRESSO_CORE_VERSION
    automationImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version

    testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
    testImplementation("org.robolectric:robolectric:$robolectric_version") {
        exclude group: "com.google.auto.service", module: "auto-service"
    }
    testImplementation group: "org.mockito.kotlin", name: "mockito-kotlin", version: mockito_kotlin_version
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: mockito_inline_version
    testImplementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-test', version: coroutines_version
    testImplementation junitUnitTests
    testImplementation group: 'com.google.dagger', name: 'hilt-android', version: HILT_VERSION
    testImplementation group: 'com.google.dagger', name: 'hilt-android-testing', version: HILT_VERSION
    testImplementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    testImplementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
}

kapt {
    correctErrorTypes true
}

sonarqube {
    androidVariant 'fullDebug'
    properties {
        property 'sonar.java.binaries', "${project.buildDir}/intermediates/javac/fullDebug/classes,${project.buildDir}/tmp/kotlin-classes/fullDebug"
        property 'sonar.coverage.jacoco.xmlReportPaths', "${project.buildDir}/reports/jacoco/${rootProject.ext.properties.jacaco_report_name}/${rootProject.ext.properties.jacaco_report_name}.xml"
        property 'sonar.sources', "${projectDir}/src/main/java"
    }
}